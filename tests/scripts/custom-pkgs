#!/usr/bin/env bash

function mktest {
    NAME="custom-pkg.$1"
    (cd scripts; ln -s custom-pkgs "$NAME") &&
    touch "results/stderr/$NAME" &&
    touch "results/stdout/$NAME"
}

# Get the package to test from our invocation name
PKG=$(basename "$0" | cut -c 12-)

ERR=0
if [[ -z "$PKG" ]]
then
    # No package given, make sure we have all of them

    # All config.nix definitions should have a test
    for FILE in ~/.nixpkgs/pkgs/*.nix ~/.nixpkgs/imports/*.nix
    do
        echo "Found '$FILE'"
        PKG=$(basename "$FILE" .nix)
        echo "Checking we have a test for '$PKG'"
        [[ -e "scripts/custom-pkg.$PKG" ]] || {
            echo "'$PKG' doesn't have a test" >> /dev/stderr
            mktest "$PKG" || ERR=1
        }
    done

    # All tests must correspond to a package
    for SCRIPT in scripts/custom-pkg.*
    do
        echo "Checking there is a package for '$SCRIPT'"
        PKG=$(basename "$SCRIPT" | cut -c 12-)
        FOUND=$(nix-instantiate \
                    --eval \
                    --expr "let pkgs = import <nixpkgs> {}; in pkgs ? $PKG")
        [[ "x$FOUND" = "xtrue" ]] || {
            echo "'$PKG' doesn't seem to be a package" >> /dev/stderr
            ERR=1
        }
    done
    exit "$ERR"
else
    # Got a package, check it
    if ! nix-shell -p "$PKG" --run true
    then
        echo "Couldn't invoke nix-shell for '$PKG'" >> /dev/stderr
        exit 1
    fi
fi
