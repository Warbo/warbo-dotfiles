#!/usr/bin/env bash

function repos {
    # Find git repos based on their .git directories
    locate -e "/home/chris/*/.git" |
    grep -v "/Backups/"            |
    grep -v "/git-html"
}

function data {
    while read -r GITDIR
    do
        dirname "$GITDIR"
    done < <(repos)

    # Include all our bare repos
    ls -d1 /home/chris/Programming/repos/*.git
}

function cached {
    ./helpers/cache.sh "git-pushed" < <(data)
}

cached > /dev/null

ERR=0

while read -r REPO
do
    # `git status` also lists unpushed commits but it doesn't work in bare repos

    pushd "$REPO" > /dev/null

    # Skip repos with no remote
    [[ -z "$(git remote)" ]] && continue

    # Lists unpushed commits and untracked branches
    while read -r BRANCH
    do
        while read -r REMOTE
        do
            UNPUSHED=$(git cherry "$BRANCH" "$REMOTE/$BRANCH" 2>&1) || {
                echo "Untracked branches in '$REPO' '$REMOTE/$BRANCH'" >> /dev/stderr
            }
            echo "$UNPUSHED" | grep "^+" > /dev/null && {
                ERR=1
                echo "Unpushed commits in '$REPO' '$REMOTE/$BRANCH'" >> /dev/stderr
            }
        done < <(git remote)
    done < <(git branch | cut -c 3-)

    popd > /dev/null
done < <(cached)

exit "$ERR"
