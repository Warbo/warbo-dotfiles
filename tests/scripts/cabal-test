#!/usr/bin/env bash

function data {
    while read -r CBL
    do
        if grep "test-suite" < "$CBL" > /dev/null
        then
            echo "$CBL"
        fi
    done < <(locate "/home/chris/Programming/*.cabal" |
             grep -v "/git-html/"                     |
             grep -v "/ghc/"                          |
             grep -v "/quickspec")
}

function cached {
    ./helpers/cache.sh "cabal-test" < <(data)
}

cached > /dev/null

ERR=0
if NAME=$(./helpers/getName.sh "$0")
then
    LINES=$(./helpers/checkNames.sh "$NAME" < <(cached)) || exit 1
    while read -r CBL
    do
        echo "Testing '$CBL'"
        DIR=$(dirname "$CBL")
        FILE=$(basename "$CBL")

        TMP=$(mktemp -d "cabal-test-temp-XXXXX")
        pushd "$TMP"

        rsync -rv --exclude=.git "$DIR" .
        SUB=$(basename "$DIR")
        pushd "$SUB"

        echo "Running hsConfig in $PWD"
        if ! hsConfig
        then
            echo "hsConfig in '$DIR'" >> /dev/stderr
            ERR=1
        fi

        [[ "$ERR" -eq 0 ]] && while read -r TEST
        do
            cabal test "$TEST" || {
                echo "Test suite '$TEST' in '$DIR' failed" >> /dev/stderr
                ERR=1
            }
        done < <(grep "test-suite" < "$FILE" | sed -e 's/^test-suite *\(.*\)$/\1/g')

        while read -r HPC
        do
            echo "Storing coverage report from '$HPC'"
            mkdir -p ~/Programming/coverage/"$NAME"
            cp -vr "$HPC" ~/Programming/coverage/"$NAME/"
        done < <(find . -type d -name html)

        popd
        popd
        rm -rf "$TMP"
        [[ "$ERR" -eq 0 ]] || break
    done < <(echo "$LINES")
else
    ./helpers/namesMatch.sh "cabal-test" < <(cached) || exit 1
fi

exit "$ERR"
