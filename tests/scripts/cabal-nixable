#!/usr/bin/env bash

function data {
    while read -r PROJECT
    do
        find "$PROJECT" -maxdepth 1 -name "*.cabal"
    done < <(my_haskell)
}

CACHE="results/data/cabal-nixable"
function cached {
    mkdir -p $(dirname "$CACHE")
    if [[ -e "$CACHE" ]] && test $(find "$CACHE" -mmin -60)
    then
        cat "$CACHE"
    else
        data | tee "$CACHE"
    fi
}

# Check how we were called
IDX=$(basename "$0" .cabal-nixable)
if [[ "x$IDX" = "xcabal-nixable" ]]
then
    # No index given, check indices match up
    CACHECOUNT=$(cached | wc -l)
    FILECOUNT=$(ls scripts/*.cabal-nixable | wc -l)
    if [[ "$CACHECOUNT" -eq "$FILECOUNT" ]]
    then
        echo "Got enough tests to cover cabal counts"
    else
        echo "Have $FILECOUNT test(s) for $CACHECOUNT files" >> /dev/stderr
        exit 1
    fi
else
    FILE=$(cached | tail -n"$IDX" | head -n1)
    echo "Trying $FILE"
    DIR=$(dirname "$FILE")
    cd "$DIR"
    hsConfig || exit 1
fi
